// Code generated by github.com/likeawizard/exporter. DO NOT EDIT.

package repository

import "context"

type (
	Service     = service
	Repo        = repository
	UpdateQuery = updateQuery
	InsertQuery = insertQuery
)

const (
	ConnStr = connStr
)

var (
	ErrNotFound    = errNotFound
	ErrInvalidName = errInvalidName
	GetConnection  = getConnection
)

func (r Repo) Get(ctx context.Context, id int) (*Entity, error) {
	return r.get(ctx, id)
}
func (r *Repo) List() ([]Entity, error) {
	return r.list()
}
func (r *Repo) ListByID(id int) (map[int]Entity, error) {
	return r.listByID(id)
}
func (r *Repo) SaveBulk(e map[int]Entity) error {
	return r.saveBulk(e)
}
func (r *Repo) Create(q *InsertQuery) (str string, err error) {
	return r.create(q)
}
func (r *Repo) Update(id int, partentID int, q UpdateQuery) (string, error) {
	return r.update(id, partentID, q)
}
func (r *Repo) Delete(id int) error {
	return r.delete(id)
}
